# Commun Printing - Development Environment
# Spuštění: docker-compose up --build
# Zastavení: docker-compose down
version: '3.8'

services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    container_name: commun_printing_frontend
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    networks:
      - commun_printing_net

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: commun_printing_backend
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/commun_printing_db?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET_NAME=models
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - JWT_SECRET=your-super-secret-jwt-key-for-dev
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - commun_printing_net

  db:
    image: postgres:15-alpine
    container_name: commun_printing_db
    environment:
      - POSTGRES_DB=commun_printing_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../migrations:/docker-entrypoint-initdb.d
      - ../seed:/seed
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d commun_printing_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - commun_printing_net

  redis:
    image: redis:7-alpine
    container_name: commun_printing_redis
    ports:
      - "6379:6379"
    networks:
      - commun_printing_net

  minio:
    image: minio/minio:latest
    container_name: commun_printing_minio
    ports:
      - "9000:9000" # API
      - "9001:9001" # Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - commun_printing_net

networks:
  commun_printing_net:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
